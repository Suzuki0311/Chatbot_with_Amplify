version: 1
frontend:
  phases:
    build:
      commands:
        - echo "Skipping frontend build"
        - mkdir empty_directory
        - echo "This is a dummy file." > empty_directory/dummy.txt
  artifacts:
    baseDirectory: empty_directory
    files:
      - '**/*'
backend:
  phases:
    preBuild:
      commands:
        - sudo amazon-linux-extras install docker
        - sudo yum install docker -y
        - sudo systemctl start docker
        - sudo usermod -a -G docker ec2-user
        - echo "Installing Docker..."
        - curl -fsSL https://get.docker.com -o get-docker.sh
        - sh get-docker.sh
        - curl https://www.python.org/ftp/python/3.8.12/Python-3.8.12.tgz -o python-3.8.tgz
        - tar xzf python-3.8.tgz
        - cd Python-3.8.12
        - ./configure --prefix=$HOME/python3.8
        - make && make install
        - cd ..
        - export PATH=$HOME/python3.8/bin:$PATH
        - pip3 install pipenv
        - pip3 install virtualenv
    build:
      commands:
        - amplifyPush --simple
        - docker build -t pictolang-dev .
        - docker tag pictolang-dev:latest 660988641828.dkr.ecr.ap-northeast-1.amazonaws.com/pictolang-dev:latest
        - aws ecr get-login-password --region ap-northeast-1 | docker login --username AWS --password-stdin 660988641828.dkr.ecr.ap-northeast-1.amazonaws.com
        - docker push 660988641828.dkr.ecr.ap-northeast-1.amazonaws.com/pictolang-dev:latest
        - aws lambda update-function-code --function-name chatGPTLineChatBotFunction-dev --image-uri 660988641828.dkr.ecr.ap-northeast-1.amazonaws.com/pictolang-dev:latest --publish
  artifacts:
    baseDirectory: chatbot_with_amplify/build
    files:
      - '**/*'
  cache:
    paths:
      - node_modules/**/*
  runtime-versions:
    python: 3.8